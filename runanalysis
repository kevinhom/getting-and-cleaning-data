# This function does the following:

# 1.  Merges the training and the test sets to create one data set.
# 2.	Extracts only the measurements on the mean and standard deviation for each measurement. 
# 3.	Uses descriptive activity names to name the activities in the data set.
# 4.	Appropriately labels the data set with descriptive variable names. 
# 5.	From the data set in step 4, creates a second, independent tidy data set
#     with the average of each variable for each activity and each subject.

library(dplyr)
library(tidyr)

run_analysis <- function(placeholder) {
  
subject.test <- read.table("~/test/subject_test.txt", header = FALSE, sep = "", colClasses = "numeric")
x.test <- read.table("~/test/X_test.txt", header = FALSE, sep = "", colClasses = "numeric")
y.test <- read.table("~/test/y_test.txt", header = FALSE, sep = "", colClasses = "numeric")

x.test.body.acceleration <- read.table("~/test/Inertial Signals/body_acc_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
y.test.body.acceleration <- read.table("~/test/Inertial Signals/body_acc_y_test.txt", header = FALSE, sep = "", colClasses = "numeric")
z.test.body.acceleration <- read.table("~/test/Inertial Signals/body_acc_z_test.txt", header = FALSE, sep = "", colClasses = "numeric")
x.test.gyro.acceleration <- read.table("~/test/Inertial Signals/body_gyro_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
y.test.gyro.acceleration <- read.table("~/test/Inertial Signals/body_gyro_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
z.test.gyro.acceleration <- read.table("~/test/Inertial Signals/body_gyro_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
x.test.total.acceleration <- read.table("~/test/Inertial Signals/total_acc_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
y.test.total.acceleration <- read.table("~/test/Inertial Signals/total_acc_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")
z.test.total.acceleration <- read.table("~/test/Inertial Signals/total_acc_x_test.txt", header = FALSE, sep = "", colClasses = "numeric")

subject.train <- read.table("~/train/subject_train.txt", header = FALSE, sep = "", colClasses = "numeric")
x.train <- read.table("~/train/X_train.txt", header = FALSE, sep = "", colClasses = "numeric")
y.train <- read.table("~/train/y_train.txt", header = FALSE, sep = "", colClasses = "numeric")

x.train.body.acceleration <- read.table("~/train/Inertial Signals/body_acc_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
y.train.body.acceleration <- read.table("~/train/Inertial Signals/body_acc_y_train.txt", header = FALSE, sep = "", colClasses = "numeric")
z.train.body.acceleration <- read.table("~/train/Inertial Signals/body_acc_z_train.txt", header = FALSE, sep = "", colClasses = "numeric")
x.train.gyro.acceleration <- read.table("~/train/Inertial Signals/body_gyro_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
y.train.gyro.acceleration <- read.table("~/train/Inertial Signals/body_gyro_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
z.train.gyro.acceleration <- read.table("~/train/Inertial Signals/body_gyro_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
x.train.total.acceleration <- read.table("~/train/Inertial Signals/total_acc_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
y.train.total.acceleration <- read.table("~/train/Inertial Signals/total_acc_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")
z.train.total.acceleration <- read.table("~/train/Inertial Signals/total_acc_x_train.txt", header = FALSE, sep = "", colClasses = "numeric")

subject.data <- data.frame(cbind(subject.test, x.test, y.test, 
                      subject.train, x.train, y.train,
                      x.test.body.acceleration, y.test.body.acceleration, z.test.body.acceleration,
                      x.test.gyro.acceleration, y.test.gyro.acceleration, z.test.body.acceleration,
                      x.test.total.acceleration, y.test.total.acceleration, z.test.total.acceleration,
                      x.train.body.acceleration, y.train.body.acceleration, z.train.body.acceleration,
                      x.train.gyro.acceleration, y.train.gyro.acceleration, z.train.gyro.acceleration,
                      x.train.total.acceleration, y.train.total.acceleration, z.train.total.acceleration))
colnames(subject.data) <- c("Subject Test", "Test X", "Test Y",
                            "Test X Body Acceleration", "Test Y Body Acceleration", "Test Z Body Acceleration",
                            "Test X Gyro Acceleration", "Test Y Gyro Acceleration", "Test Z Gyro Acceleration",
                            "Test X Total Acceleration", "Test Y Total Acceleration", "Test Z Total Acceleration",
                            "Train X Body Acceleration", "Train Y Body Acceleration", "Train Z Body Acceleration",
                            "Train X Gyro Acceleration", "Train Y Gyro Acceleration", "Train Z Gyro Acceleration",
                            "Train X Total Acceleration", "Train Y Total Acceleration", "Train Z Total Acceleration")
write(subject.data, "Subject Running Analysis.csv")

# Idea: Use 'for' loop to automate using tapply to apply the mean for each column and return the overall result

subject.test.mean <- tapply(subject.data$subject.test, mean)
subject.test.sd <- tapply(subject.data$subject.test, sd)
x.test.mean <- tapply(subject.data$x.test, mean)
x.test.sd <- tapply(subject.data$x.test, sd)
y.test.mean <- tapply(subject.data$y.test, mean)
y.test.sd <- tapply(subject.data$y.test, sd)
z.test.mean <- tapply(subject.data$z.test, mean)
z.test.sd <- tapply(subject.data$z.test, sd)


}
